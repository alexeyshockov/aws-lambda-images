name: Docker

on:
  # arm64 takes too much time to build on QEMU...
  workflow_dispatch:
#  release:
#    types: [ published ]

jobs:
  build:
    name: Build and publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker:
          - { branch: "3.10", flavor: "debian-slim", python_version: "3.10.9" }
          - { branch: "3.10", flavor: "debian",      python_version: "3.10.9" }
          - { branch: "3.11", flavor: "debian-slim", python_version: "3.11.1" }
          - { branch: "3.11", flavor: "debian",      python_version: "3.11.1" }
    steps:
      # BuildKit's Git context is used below, no need for a local checkout
#      - uses: actions/checkout@v3

      - uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"
      - uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}/python
          tags: |
            type=raw, value=${{ matrix.docker.branch }}-${{ matrix.docker.flavor }}
            type=raw, value=${{ matrix.docker.branch }}, enabled=${{ endsWith(matrix.docker.flavor, 'slim') }}
          labels: |
            org.opencontainers.image.title="AWS Lambda Python ${{ matrix.docker.python_version }}"
            org.opencontainers.image.description="Debian-based Python AWS Lambda runtime"

      - name: Build and push python:${{ matrix.docker.branch }}-${{ matrix.docker.flavor }}
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:python"
          platforms: linux/amd64,linux/arm64
          target: ${{ matrix.docker.flavor }}
          build-args: |
            PYTHON_VERSION="${{ matrix.docker.python_version }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # See https://docs.docker.com/build/cache/backends/gha/
          cache-from: type=gha
          cache-to: type=gha,mode=max
